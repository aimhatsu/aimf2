{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts"],"names":["LoginPage","navCtrl","util","auth","storage","user","email","password","isLoading","login","then","res","console","log","navigateRoot","err","presentErr","JSON","stringify","statusText","message","navigateForward","register","selector","templateUrl","styleUrls","routes","path","component","LoginPageModule","forChild","imports","declarations"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../services/auth.service\";\nimport { UtilService } from \"../services/util/util.service\";\nimport { StorageService } from \"../services/storage/storage.service\";\nimport { AlertController, NavController } from \"@ionic/angular\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  user = {\n    email: '', password: ''\n  }\n  isLoading: boolean = false;\n\n  constructor(public navCtrl: NavController,public util: UtilService, \n    public auth: AuthService, public storage: StorageService) { }\n\n  ngOnInit() {\n  }\n\n  login(){\n    // For development purposes \n    // this.navCtrl.navigateRoot(['/tabs/dashboard']);\n    \n    if(this.user.email !='' && this.user.password !=''){\n      this.isLoading = true;\n      this.auth.login(this.user.email, this.user.password).then((res)=>{\n        this.isLoading = false;\n        console.log(\"Login API \", res);\n        this.navCtrl.navigateRoot(['/tabs/dashboard'])\n        \n      }).catch((err)=>{\n        this.isLoading = false;\n        this.util.presentErr(JSON.stringify(err.statusText), JSON.stringify(err.message));\n        console.log(err);\n        \n      })\n    }\n  }\n\n  register(){\n    this.navCtrl.navigateForward('register');\n  }\n \n}\n","<ion-content>\n  <section class=\"user-login-area\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"single-user-area\">\n            <div class=\"login-area\">\n              <div class=\"ion-text-center\">\n                <img src=\"../../assets/images/mia-wht.png\" alt=\"\">\n                <br><br>\n              </div>\n\n              <ion-item color=\"transparent\">\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\n                <ion-label>\n                  CPF / CNPJ\n                </ion-label>\n                <ion-input type=\"email\" [(ngModel)]=\"user.email\"></ion-input>\n              </ion-item>\n\n              <br>\n\n              <ion-item color=\"transparent\">\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"lock\"></ion-icon>\n                <ion-label>\n                  Senha\n                </ion-label>\n                <ion-input type=\"password\" [(ngModel)]=\"user.password\"></ion-input>\n              </ion-item>\n              <br>\n              <ion-button expand=\"block\" shape=\"round\" color=\"light\" (click)=\"login()\">\n                <span *ngIf=\"!isLoading\">Entrar</span>\n                <ion-spinner *ngIf=\"isLoading\" color=\"dark\"></ion-spinner>\n              </ion-button>\n            </div>\n\n            <div class=\"privacy-area\">\n              <p>Novo membro ?</p>\n              <ion-button (click)=\"register()\" fill=\"clear\" color=\"secondary\"><b>Cadastrar</b></ion-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n</ion-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n"]}